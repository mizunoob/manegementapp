{"version":3,"sources":["actions/index.jsx","reducer/index.jsx","contexts/AppContext.jsx","components/Task.jsx","components/AllTasks.jsx","components/IncompleteTasks.jsx","components/CompleteTasks.jsx","components/Delete.jsx","components/DeleteMode.jsx","components/Form.jsx","App.js","index.js"],"names":["CREATE_EVENT","DELETE_EVENT","DELETE_ALL_EVENTS","CHANGE_COMP_TO_INCOMP","CHANGE_INCOMP_TO_COMP","events","state","action","type","event","title","num","body","progress","length","id","filter","Comp","Object","assign","Incomp","AppContext","createContext","Task","task","dispatch","useContext","href","className","lastdate","alt","onClick","e","window","confirm","AllTasks","Array","isArray","map","index","IncompleteTasks","CompleteTasks","Delete","DeleteMode","Form","useState","setTitle","setNum","setBody","setProgress","isOpen","setIsOpen","unCreatable","unDeletable","default","x","y","width","minHeight","htmlFor","value","onChange","target","disabled","preventDefault","date","now","Date","youbi","getFullYear","getMonth","getDate","getDay","nowDate","App","useReducer","reducer","changeProgress","Provider","color","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9aa9d54b.chunk.js","sourcesContent":["export const CREATE_EVENT = 'CREATE_EVENT'\nexport const DELETE_EVENT = 'DELETE_EVENT'\nexport const DELETE_ALL_EVENTS = 'DELETE_ALL_EVENTS'\nexport const CHANGE_COMP_TO_INCOMP = 'CHANGE_COMP_TO_INCOMP'\nexport const CHANGE_INCOMP_TO_COMP = 'CHANGE_INCOMP_TO_COMP'","import {\n  CREATE_EVENT,\n  DELETE_EVENT,\n  DELETE_ALL_EVENTS,\n  CHANGE_INCOMP_TO_COMP,\n  CHANGE_COMP_TO_INCOMP\n} from '../actions'\n\n// CREATE~DELETE_ALLは問題なし\nconst events = (state = [], action) => {\n  switch(action.type) {\n    case CREATE_EVENT:\n      const event = {\n        title: action.title,\n        num: action.num,\n        body: action.body,\n        progress: action.progress\n      }\n      const length = state.length\n      const id =  length === 0 ? 1 : state[length - 1].id + 1 \n      return [...state, { id, ...event }]\n    case DELETE_EVENT:\n      return state.filter(event => event.id !== action.id)\n    case DELETE_ALL_EVENTS:\n      return []\n    case CHANGE_INCOMP_TO_COMP: // 未完了→完了\n      const Comp = {progress: '完了'}\n      Object.assign(\n        ...state,\n        Comp\n      )\n      return (\n        // console.log(state[incompEventID]) によってオブジェクトの取得は確認済み\n        [...state]\n      )\n    case CHANGE_COMP_TO_INCOMP: // 完了→未完了\n      const Incomp = {progress: '未完了'}\n      Object.assign(\n        ...state,\n        Incomp\n      )\n      return (\n        // console.log(state[compEventID])\n        [...state]\n      )\n    default:\n      return state\n  }\n}\n\nexport default events","import { createContext } from 'react'\n\nconst AppContext = createContext()\n\nexport default AppContext","import React, { useContext } from 'react'\nimport {\n  CHANGE_COMP_TO_INCOMP,\n  CHANGE_INCOMP_TO_COMP,\n} from '../actions'\nimport AppContext from '../contexts/AppContext'\n\nexport const Task = ({ task }) => {\n  // 以下の関数を使って完了⇄未完了の変更をできるようにしたい\n  // 完了、未完了はprogressというプロパティで文字列として管理\n  // dispatchの実行までは問題なし\n  const { dispatch } = useContext(AppContext)\n  const onClickComplete = e => {\n    const id = task.id\n    const Progress = task.progress\n    // eslint-disable-next-line\n    switch (Progress) {\n      case '未完了':\n        const incompleteResult = window.confirm('このタスクは未完了のタスクです。完了に変更しますか？')\n        if (incompleteResult) dispatch({ type:CHANGE_INCOMP_TO_COMP, id})\n        break\n      case '完了':\n        const completeResult = window.confirm('このタスクは完了したタスクです。未完了に変更しますか？')\n        if (completeResult) dispatch({ type:CHANGE_COMP_TO_INCOMP, id})\n        break\n    }\n  }\n\n\n  return (\n    <li href=\"#\" className=\"list-group-item list-group-item-action flex-column align-items-start\">\n    <div className=\"d-flex w-100 justify-content-between\">\n      <h5 className=\"mb-1\">{task.title}</h5>\n      <small>{task.lastdate}</small>\n    </div>\n    <p className=\"mb-1\">{task.body}</p>\n    <div className=\"list-small\">\n      <small alt=\"業務No.\">{task.num}</small>\n      <small className=\"on-click\" onClick={onClickComplete}>{task.progress}</small>\n    </div>\n  </li>\n  )\n}","import React, {useContext} from 'react'\nimport { Task } from './Task'\nimport AppContext from '../contexts/AppContext'\n\nexport const AllTasks = () => {\n  const { state, dispatch } = useContext(AppContext)\n  return (\n    <ul>\n      {Array.isArray(state) && state.map((task, index) => {\n        return (\n          <Task key={index} task={task} state={state} dispatch={dispatch}/>\n        )\n      })}\n    </ul>\n  )\n}","import React, {useContext} from 'react'\nimport { Task } from './Task'\nimport AppContext from '../contexts/AppContext'\n\nexport const IncompleteTasks = () => {\n  const { state, dispatch } = useContext(AppContext)\n  return (\n    <ul>\n    {Array.isArray(state) && state.map((task, index) => {\n      if (task.progress === '未完了') {\n        return (\n          <Task key={index} task={task} state={state} dispatch={dispatch}/>\n        )\n        // eslint-disable-next-line\n      } else return\n    })}\n  </ul>\n  )\n}","import React, {useContext} from 'react'\nimport { Task } from './Task'\nimport AppContext from '../contexts/AppContext'\n\nexport const CompleteTasks = () => {\n  const { state, dispatch } = useContext(AppContext)\n  return (\n    <ul>\n    {Array.isArray(state) && state.map((task, index) => {\n      if (task.progress === '完了') {\n        return (\n          <Task key={index} task={task} state={state} dispatch={dispatch}/>\n        )\n        // eslint-disable-next-line\n      } else return\n    })}\n  </ul>\n  )\n}","import React, { useContext } from 'react'\nimport { DELETE_EVENT } from '../actions'\nimport AppContext from '../contexts/AppContext'\n\nexport const Delete = ({ task }) => {\n  const { dispatch } = useContext(AppContext)\n\n  const deleteTask = () => {\n    const id = task.id\n    const deleteResult = window.confirm('このタスクを削除しますか？') \n    if (deleteResult) dispatch({ type:DELETE_EVENT, id })\n  }\n\n  return (\n    <li href=\"#\" className=\"list-group-item list-group-item-action flex-column align-items-start on-click\">\n      <div onClick={deleteTask}>\n        <div className=\"d-flex w-100 justify-content-between\">\n          <h5 className=\"mb-1\">{task.title}</h5>\n          <small>{task.lastdate}</small>\n        </div>\n        <p className=\"mb-1\">{task.body}</p>\n        <div className=\"list-small\">\n          <small>{task.num}</small>\n          <small>{task.progress}</small>\n        </div>\n      </div>\n    </li>\n  )\n}","import React, { useContext } from 'react'\nimport { Delete } from './Delete'\nimport AppContext from '../contexts/AppContext'\n\nexport const DeleteMode = () => {\n  const { state, dispatch } = useContext(AppContext)\n\n  return (\n    <>\n      {Array.isArray(state) && state.map((task, index) => {\n        return (\n          <div className=\"list-group\">\n            <ul>\n              <Delete key={index} task={task} state={state} dispatch={dispatch}/>\n            </ul>\n          </div>\n        )\n      })}\n    </>\n  )\n}","import React, { useContext, useState } from 'react'\nimport { Rnd } from \"react-rnd\";\nimport {\n  CREATE_EVENT,\n  DELETE_ALL_EVENTS\n} from '../actions'\nimport AppContext from '../contexts/AppContext'\n\nexport const Form = () => {\n  const { state, dispatch } = useContext(AppContext)\n  const [ title, setTitle ] = useState('')\n  const [ num, setNum ] = useState('')\n  const [ body, setBody ] = useState('')\n  const [ progress, setProgress ] = useState('選択して下さい')\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const unCreatable = title === '' || body === '' || progress === '選択して下さい'\n  const unDeletable = state.length === 0\n\n  const onClickAdd = e => {\n    e.preventDefault()\n\n    const nowDate = ( date = null ) => {\n      const now = date instanceof Date ? date : new Date();\n      const youbi = [\"日\",\"月\",\"火\",\"水\",\"木\",\"金\",\"土\"];\n      return `${ now.getFullYear() }/${ now.getMonth() + 1 }/${ now.getDate()  }(${ youbi[now.getDay()] })`\n  };\n    dispatch({\n      type: CREATE_EVENT,\n      title,\n      num,\n      body,\n      progress,\n      lastdate: nowDate()\n    })\n    setTitle('')\n    setNum('')\n    setBody('')\n  }\n\n  const deleteAllTasks = () => {\n    const result = window.confirm('全てのタスクを削除してもよろしいですか？')\n    if (result) dispatch ({ type: DELETE_ALL_EVENTS })\n  }\n\n  return (\n  <div className=\"App\">\n      <header className=\"App-header\">\n        <button className=\"btn btn-primary\" onClick={() => setIsOpen(true)}>タスクを作成する</button>\n        {isOpen ? (\n          <Rnd\n            className=\"RndStyle\"\n            default={{\n              x: 300,\n              y: 50,\n              width: 800,\n              minHeight: 300\n            }}\n          >\n    <form>\n      <div className=\"form-window\">\n        <div className=\"form-group\">\n          <label htmlFor=\"formEventTitle\">タスク名</label>\n          <input className=\"form-control\" id=\"formEventTitle\" value={title} onChange={e => setTitle(e.target.value)}/>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"formEventNum\">タスクNo.</label>\n          <input className=\"form-control\" id=\"formEventNum\" value={num} onChange={e => setNum(e.target.value)}/>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"formEventBody\">タスク内容</label>\n          <textarea className=\"form-control\" id=\"formEventBody\" value={body} onChange={e => setBody(e.target.value)}></textarea>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"formEventPnrogress\">進捗</label>\n          <select className=\"form-control form-control-sm\" id=\"formEventProgress\" value={progress} onChange={e => setProgress(e.target.value)}>\n            <option>選択して下さい</option>\n            <option>未完了</option>\n            <option>完了</option>\n          </select>\n        </div>\n      </div>\n    </form>\n    <button\n    className=\"btn btn-info\"\n    disabled={unCreatable}\n    onClick={onClickAdd}\n    >\n      作成\n    </button>\n            <button onClick={() => setIsOpen(false)} className=\"btn btn-secondary\">\n              閉じる\n            </button>\n    </Rnd>\n    ) : (\n      <></>\n    )}\n    <button className=\"btn btn-danger\" disabled={unDeletable} onClick={deleteAllTasks}>全てのタスクを削除する</button>\n  </header>\n</div>\n  )\n}","import React, { useReducer } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./style.css\"\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport reducer from './reducer'\nimport AppContext from './contexts/AppContext'\n\nimport { AllTasks } from './components/AllTasks'\nimport { IncompleteTasks } from './components/IncompleteTasks'\nimport { CompleteTasks } from './components/CompleteTasks'\nimport { DeleteMode } from './components/DeleteMode'\nimport { Form } from './components/Form'\n\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, [])\n\n  const changeProgress = state.length !== 0 && (<p>「完了」または「未完了」をクリックすることでタスクの進捗を変更できます</p>)\n\n  return (\n    <AppContext.Provider value={{ state, dispatch }}>\n      <Form />\n      <Tabs>\n        <TabList>\n          <Tab>ALL</Tab>\n          <Tab>INCOMPLETE</Tab>\n          <Tab>COMPLETE</Tab>\n          <Tab color=\"red\">DELETE MODE</Tab>\n        </TabList>\n          {state.length === 0 && (<p>現在、登録されているタスクはありません</p>)}\n        <TabPanel>\n        <div className=\"list-group\">\n          {changeProgress}\n          <AllTasks />\n        </div>\n        </TabPanel>\n        <TabPanel>\n          {changeProgress}\n          <div className=\"list-group\">\n              <IncompleteTasks />\n          </div>\n        </TabPanel>\n        <TabPanel>\n          {changeProgress}\n          <div className=\"list-group\">\n              <CompleteTasks />\n          </div>\n        </TabPanel>\n        <TabPanel>\n        {state.length !== 0 && (<p className=\"delete-message\">　削除したいタスクのタイトルをクリックして下さい。</p>)}\n          <DeleteMode />\n        </TabPanel>\n      </Tabs>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}